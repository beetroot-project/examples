set(ENUM_TEMPLATES LIB_GEN)

set(TEMPLATE_OPTIONS NO_TARGETS)

function(apply_dependency_to_target DEPENDEE_TARGET_NAME OUR_TARGET_NAME)
	
	get_target_property(DEPENDEE_SOURCE_DIR ${DEPENDEE_TARGET_NAME} SOURCE_DIR)
	get_target_property(DEPENDEE_BINARY_DIR ${DEPENDEE_TARGET_NAME} BINARY_DIR)
	
	if(IS_ABSOLUTE "${SOURCE}")
		file(RELATIVE_PATH TMP_REL_SOURCE "${DEPENDEE_SOURCE_DIR}" "${SOURCE}")
	else()
		set(TMP_REL_SOURCE "${SOURCE}")
	endif()
	
	get_filename_component(REL_TARGET_DIR "${TMP_REL_SOURCE}" DIRECTORY)
	get_filename_component(REL_TARGET_FILENAME "${TMP_REL_SOURCE}" NAME)
	set(TARGET_DIR "${DEPENDEE_BINARY_DIR}/${TARGET_DIR}/${REL_TARGET_DIR}")
	
	add_custom_command(OUTPUT "${TARGET_DIR}/${REL_TARGET_FILENAME}"
		COMMAND mkdir -p ${TARGET_DIR} && ${Python_EXECUTABLE} ${SERIALBOX2PP_PPSER_LOCATION} -d ${TARGET_DIR} ${SOURCE}
		DEPENDS ${SOURCE}
		WORKING_DIRECTORY ${DEPENDEE_BINARY_DIR}
		COMMENT "Preprocessing file ${TMP_REL_SOURCE} for Serialbox..."
		VERBATIM
	)

#	message(STATUS "OUTPUT \"${TARGET_DIR}/${REL_TARGET_FILENAME}\" COMMAND mkdir -p ${TARGET_DIR} && ${Python_EXECUTABLE} ${SERIALBOX2PP_PPSER_LOCATION} -d ${TARGET_DIR} ${SOURCE} DEPENDS ${SOURCE} WORKING_DIRECTORY ${DEPENDEE_BINARY_DIR} ")
	target_sources(${DEPENDEE_TARGET_NAME} ${KEYWORD} ${TARGET_DIR}/${REL_TARGET_FILENAME})
endfunction()

